(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{H:()=>i});const t=(()=>{document.querySelectorAll(".game-panel");const e=document.querySelectorAll(".gameboard"),t=e[0],r=e[1];return{renderPlayerBoard:function e(r){const o=t;!function(e){e.textContent=""}(o);const a=n.buildPlayerBoard(r);r.areAllShipsPlaced()||a.addEventListener("click",(t=>function(t,n){const r=n.sideLength,o=t.target;if(o.classList.contains("board-cell")){const t=o.parentNode.children,a=Array.from(t).indexOf(o),s=Math.floor(a/r),l=a%r;n.setShip({x:l,y:s},"vertical"),e(n),n.areAllShipsPlaced()&&i()}}(t,r)),!0),o.appendChild(a)},renderOpponentBoard:function(e){const t=r,o=n.buildPlayerBoard(e);t.appendChild(o)}}})(),n={buildPlayerBoard:function(e){const t=document.createElement("div");t.classList.add("board-grid");for(let n of e.board)for(let e of n){const n=document.createElement("div");n.classList.add("board-cell"),e.hasShip()?n.classList.add("live-ship-cell"):e.isChecked&&n.classList.add("cell-checked"),t.appendChild(n)}return t}},r=t,o=()=>{const e={isChecked:!1,ship:null,shipIndex:null,assignShip(t,n){e.ship=t,e.shipIndex=n},hasShip:()=>null!==e.ship};return e},a=e=>{const t=e,n=function(e){let t=Array(e);for(let n=0;n<e;n++){t[n]=Array(e);for(let r=0;r<e;r++)t[n][r]=o()}return t}(e);let r=[5,4,3,3,2];function a(e){return s.board[e.y][e.x]}const s={sideLength:t,board:n,ships:[],missed:[],areAllShipsPlaced:()=>r.length<=0,setShip(e,n){const o=((e,t,n)=>{const r={length:e,cells:Array(e).fill(!0),pos:t,orie:n,hit(e){r.cells[e]=!1},isSunk:()=>r.cells.every((e=>0==e))};return r})(r[0],e,n),l=function(e){const n=e.length,r=e.pos,o=e.orie;let s=[];for(let e=0;e<n;e++){let n;"horizontal"===o?r.x+e<t&&(n=a({x:r.x+e,y:r.y})):"vertical"===o&&r.y+e<t&&(n=a({x:r.x,y:r.y+e})),s.push([n,e])}return!!s.every((e=>void 0!==e[0]&&!e[0].hasShip()))&&(s.forEach((t=>{t[0].assignShip(e,t[1])})),!0)}(o);l&&(s.ships.push(o),r.shift())},scrambleShips(){for(;!s.areAllShipsPlaced();){const e=Math.floor(2*Math.random())?"horizontal":"vertical",n=Math.floor(Math.random()*t),r=Math.floor(Math.random()*t);s.setShip({x:n,y:r},e)}},recieveAttack(e){const t=a({x:e.x,y:e.y});if(t.hasShip()){const e=t.ship,n=t.shipIndex;e.hit(n),e.isSunk()&&s.ships.map((e=>e.isSunk())).every((e=>!0===e))}else s.missed.push(e);t.isChecked=!0},wasCellChecked:e=>!0===a(e).isChecked};return s},s=(e,t=!1)=>{function n(e,t){return!e.gameboard.wasCellChecked(t)&&(e.gameboard.recieveAttack(t),!0)}const r={name:e,isAI:t,gameboard:a(10),attackOpponent:n};return t&&(r.attackRandomCell=function(e){const t=e.gameboard.board.length;let r=!1;for(;!r;)r=n(e,{x:Math.floor(Math.random()*t),y:Math.floor(Math.random()*t)})}),r};let l;function i(){const e=l.length;for(console.log("GAME STARTED");;){l[0%e];break}}!function(){const e=s("One"),t=s("CPU",!0);l=[e,t],function(){const e=l[1].gameboard;e.scrambleShips(),r.renderOpponentBoard(e)}(),function(){const e=l[0].gameboard;r.renderPlayerBoard(e)}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,